name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [ '3.9' ]
      fail-fast: false
    steps:
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt install ffmpeg
      - if: matrix.os == 'windows-latest'
        run: choco install ffmpeg
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install pipenv
      - run: python -m pipenv install --python ${{ matrix.python-version }} --skip-lock --dev
      - run: python -m pipenv run invoke test
  check_style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --skip-lock --dev
      - run: python -m pipenv run invoke style --check
  check_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --skip-lock --dev
      - run: python -m pipenv run invoke lint
  check_complexity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --skip-lock --dev
      - run: python -m pipenv run invoke xenon
